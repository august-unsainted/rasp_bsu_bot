from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, Message
from utils.db_functions import find_user

edit_kb = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='üìÖ –î–µ–Ω—å', callback_data='edit_day'),
     InlineKeyboardButton(text='üïë –í—Ä–µ–º—è —Ä–∞—Å—Å—ã–ª–∫–∏', callback_data='edit_time')],
    [InlineKeyboardButton(text='üéì –ì—Ä—É–ø–ø–∞', callback_data='edit_group'),
     InlineKeyboardButton(text='üè¢ –û—Ç–¥–µ–ª–µ–Ω–∏–µ', callback_data='edit_department')],
    [InlineKeyboardButton(text='üìå –ë—ã—Å—Ç—Ä–∞—è –∫–Ω–æ–ø–∫–∞', callback_data='edit_hotkey'),
     InlineKeyboardButton(text='‚öôÔ∏è –°—Ç–∏–ª—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è', callback_data='edit_settings')],
    [InlineKeyboardButton(text='‚õî –ü—Ä–µ–∫—Ä–∞—Ç–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π', callback_data='stop')]])

edit_day_kb = [[InlineKeyboardButton(text='–°–µ–≥–æ–¥–Ω—è', callback_data='send_today')],
               [InlineKeyboardButton(text='–ó–∞–≤—Ç—Ä–∞', callback_data='send_tomorrow')],
               [InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='back')]]


edit_department_kb = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–î–Ω–µ–≤–Ω–æ–µ –æ—Ç–¥–µ–ª–µ–Ω–∏–µ', callback_data='department_full_time')],
    [InlineKeyboardButton(text='–î—Ä—É–≥–æ–µ', callback_data='department_other')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='back')]])

edit_settings_kb = InlineKeyboardMarkup(inline_keyboard=[[
    InlineKeyboardButton(text='–ü—Ä–æ—Å—Ç–æ–µ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)', callback_data='default_settings')],
    [InlineKeyboardButton(text='–ü–æ–¥—Ä–æ–±–Ω–æ–µ', callback_data='detailed_settings')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='back')]])

edit_hotkey_kb = InlineKeyboardMarkup(inline_keyboard=[[
    InlineKeyboardButton(text='–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è', callback_data='0today_hotkey'),
    InlineKeyboardButton(text='–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞', callback_data='1tomorrow_hotkey')],
    [InlineKeyboardButton(text='–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –Ω–µ–¥–µ–ª—é', callback_data='2full_hotkey')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='back')]])

delete_user_kb = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='üóëÔ∏è –î–∞', callback_data='delete_user')],
    [InlineKeyboardButton(text='üôÖ –ù–µ—Ç', callback_data='dont_delete_user')]])

back_kb = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='back')]])


async def update_kb(kb: list, message: Message):
    user = await find_user(message.chat.id)
    kbs = {
        edit_day_kb: 'day',
        edit_department_kb: 'department',
        edit_settings_kb: 'settings',
        edit_hotkey_kb: 'hotkey'
    }
    field = kbs[kb]
    # if kb == edit_day_kb:
    #     current = 'day'
    # elif kb == edit_department_kb:
    #     current = 'department'
    # elif kb == edit_settings_kb:
    #     current = 'settings'
    # else:
    #     current = 'hotkey'
    for i in range(len(kb)):
        btn = kb[i][0]
        if user[field] == btn.text:
            kb[i][0].text = f'‚úÖ {btn.text}'

    return InlineKeyboardMarkup(inline_keyboard=kb)

